<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on dnz986 notes</title>
    <link>https://dnz986.github.io/posts/</link>
    <description>Recent content in Posts on dnz986 notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Feb 2019 23:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://dnz986.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clearing Up Domain Registry</title>
      <link>https://dnz986.github.io/cleaning-up-domain-with-domain-registry/</link>
      <pubDate>Thu, 14 Feb 2019 23:00:00 +0200</pubDate>
      
      <guid>https://dnz986.github.io/cleaning-up-domain-with-domain-registry/</guid>
      <description>Some time ago I have found a blog which I enjoyed reading https://craftinginjava.com. It is quality content. The post I enjoyed the most was about the domain registry context. If you like immutable objects like I do, then this pattern will help you clean up the code, and avoid numerous constructor arguments. The beauty of it is that you can use the pattern in multiple languages, not just java. It is a generally valid way of doing dependency management within your components.</description>
    </item>
    
    <item>
      <title>JQ Upsert Cloudformation</title>
      <link>https://dnz986.github.io/jq-upsert-cloudformation/</link>
      <pubDate>Fri, 08 Feb 2019 01:26:08 +0200</pubDate>
      
      <guid>https://dnz986.github.io/jq-upsert-cloudformation/</guid>
      <description>I&amp;rsquo;ve been trying recently to automate some cloudformation scripts. The parameters that are supplied to cloudformation can be all from the command line or all within a file, but not both. Hence I went for changing the file using jq. If you want to change any json from the command line then jq will be your friend.
A typical cloudformation json will look like this:
[ { &amp;#34;ParameterKey&amp;#34;: &amp;#34;KeyPairName&amp;#34;, &amp;#34;ParameterValue&amp;#34;: &amp;#34;MyKey&amp;#34; }, { &amp;#34;ParameterKey&amp;#34;: &amp;#34;InstanceType&amp;#34;, &amp;#34;ParameterValue&amp;#34;: &amp;#34;m1.</description>
    </item>
    
  </channel>
</rss>